services:
  # PostgreSQL with pgvector extension for vector storage
  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres-rag
    restart: unless-stopped
    environment:
      - POSTGRES_DB=ragdb
      - POSTGRES_USER=raguser
      - POSTGRES_PASSWORD=ragpass123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/sql/init-pgvector.sql:/docker-entrypoint-initdb.d/init-pgvector.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raguser -d ragdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama LLM inference server
  ollama:
    volumes: # Ollama with persistent storage (no redownloading models).
      - ./ollama/ollama-server:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    image: docker.io/ollama/ollama:latest
    ports:
      - 11434:11434
    environment:
      - OLLAMA_KEEP_ALIVE=1h
    # Enable GPU support
    #deploy:
    #resources:
    #reservations:
    #devices:
    #- driver: nvidia
    #count: all
    #capabilities: [gpu]
  # Spring AI Backend
  chat-app:
    build:
      context: . # Dockerfile in the root folder
    container_name: chat-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_AI_OLLAMA_BASE_URL=http://ollama:11434
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ragdb
      - SPRING_DATASOURCE_USERNAME=raguser
      - SPRING_DATASOURCE_PASSWORD=ragpass123
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
